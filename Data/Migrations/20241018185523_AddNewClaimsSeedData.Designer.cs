// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Claimed.Data.Migrations
{
    [DbContext(typeof(ClaimsDbContext))]
    [Migration("20241018185523_AddNewClaimsSeedData")]
    partial class AddNewClaimsSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Claimed.Models.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimId"));

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateReviewed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("HoursWorked")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("SupportingDocument")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("Claims");

                    b.HasData(
                        new
                        {
                            ClaimId = 1,
                            Course = "Programming 1A",
                            DateSubmitted = new DateTime(2024, 10, 18, 20, 55, 21, 911, DateTimeKind.Local).AddTicks(6441),
                            Description = "Claim for completing all of Prog 1A before mid-term break",
                            HourlyRate = 505.00m,
                            HoursWorked = 10.5,
                            Status = "Pending",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            IsAdmin = false,
                            PasswordHash = "user1password",
                            Username = "user1"
                        },
                        new
                        {
                            UserId = 2,
                            IsAdmin = false,
                            PasswordHash = "user2password",
                            Username = "user2"
                        },
                        new
                        {
                            UserId = 3,
                            IsAdmin = true,
                            PasswordHash = "admin1password",
                            Username = "admin1"
                        },
                        new
                        {
                            UserId = 4,
                            IsAdmin = true,
                            PasswordHash = "admin2password",
                            Username = "admin2"
                        });
                });

            modelBuilder.Entity("Claimed.Models.Claim", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
